# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class SeleniumTests():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_about(self):
    self.driver.get("https://www.sportsrightnow.me/")
    self.driver.find_element(By.LINK_TEXT, "About").click()
    element = self.driver.find_element(By.LINK_TEXT, "About")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(1) > h2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(1) > h2").text == "Our Team"
    element = self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(2) > h2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(2) > h2").text == "Technologies Utilized"
    element = self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(3) > h2")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(3) > h2").text == "APIs Utilized"

  def test_aboutRepolink(self):
    self.driver.get("https://www.sportsrightnow.me/")
    self.driver.find_element(By.LINK_TEXT, "About").click()
    element = self.driver.find_element(By.LINK_TEXT, "Repo Link")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    elements = self.driver.find_elements(By.LINK_TEXT, "Repo Link")
    assert len(elements) > 0
    self.driver.find_element(By.LINK_TEXT, "Repo Link").click()
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".home-panel-title")
    assert len(elements) > 0

  def test_notFound(self):
    self.driver.get("https://www.sportsrightnow.me/")
    self.driver.get("https://www.sportsrightnow.me/fakepage")
    assert self.driver.find_element(By.CSS_SELECTOR, "h1").text == "404"

  def test_notFoundHomeLink(self):
    self.driver.get("https://www.sportsrightnow.me/")
    self.driver.get("https://www.sportsrightnow.me/fakepage")
    assert self.driver.find_element(By.CSS_SELECTOR, "h1").text == "404"
    assert self.driver.find_element(By.LINK_TEXT, "Return Home").text == "Return Home"
    self.driver.find_element(By.LINK_TEXT, "Return Home").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "h2").text == "Sports Now"

print("Hi")
